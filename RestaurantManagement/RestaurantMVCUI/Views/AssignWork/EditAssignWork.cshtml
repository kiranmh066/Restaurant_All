@model RestaurantEntity.AssignWork
@{
    Layout = "~/Views/Shared/_LayoutHeadChef.cshtml";
}
<body style="background-color:#5A3B5D">


<div class=" container" style="color:white">
        <center>
<h3>Edit Employee</h3></center>
<div>
    <a asp-controller="HeadChef" asp-action="Index">Index</a>
    <hr />
</div>
<form method="post" enctype="multipart/form-data">

    <div class="form-group">
        @*  form group for automatic audjustment for various screen sizes*@
        <label>Assign Work Id</label>

        <input type="text" asp-for="AssignId" class="form-control" placeholder="Enter Assign Work Id" required  />

    </div>
    <div class="form-group">
        @*  form group for automatic audjustment for various screen sizes*@
        <label>Order ID</label>

        <input type="text" asp-for="OrderId" class="form-control" placeholder="Enter Order ID" required />

    </div>
    <div class="form-group">
        <label>Employee/Chef ID</label>
        <input type="text" asp-for="EmpId" class="form-control" placeholder="Enter Employee/Chef ID" required />
    </div>



    <input type="submit" value="Save" class="btn btn-outline-success" /> @*submit display message for required option required works only with submit*@
    <input type="button" value="Reset" class="btn btn-outline-secondary" />
    <hr />
    @*submit sends form to server thats why we use submit not button type  *@
    @*   by default get request is called so we have mention post in the initial stage of form which will call httppost in Employeecontroller *@
    @if (ViewBag.status == "Ok")
    {
        <div class="alert alert-success">
            @ViewBag.message
        </div>
    }
    else if (ViewBag.status == "Error")
    {
        <div class="alert alert-danger">
            @ViewBag.message
        </div>
    }
</form>
    </div>
</body>